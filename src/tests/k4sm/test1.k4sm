!ent %_start @ 0x1000

%_start
    call i64 %kernel_main
    ; push i64 bp
    ; mov i64 bp sp
    ; sub i64 sp $8
    ; mov i64 rg $420
    ; mov i64 [-8+bp] %printi_
    ; call i64 [-8+bp]
    ; printi i32 ra
    ; mov i64 sp bp
    ; pop i64 bp
    hlt
    und

%llvm_memcpy_p0i8_p0i8_i64
    push i64 bp
    push i64 rb
    push i64 rd
    push i64 rc
    mov i64 rb rg ; dest
    mov i64 rd rh ; src
    ; ri = len
    mov i64 rc rz
%llvm_memcpy_p0i8_p0i8_i64_loop
    cmp i64 rc ri
    jeq i64 %llvm_memcpy_p0i8_p0i8_i64_end
    mov i8 [rb] [rd]
    add i64 rc $1
    add i64 rb $1
    add i64 rd $1
    jmp i64 %llvm_memcpy_p0i8_p0i8_i64_loop
%llvm_memcpy_p0i8_p0i8_i64_end
    pop i64 rc
    pop i64 rd
    pop i64 rb
    pop i64 bp
    ret


%llvm_assume
    cmp i8 rg rz
    jne i64 %llvm_assume_passed
    und
%llvm_assume_passed
    ret

%llvm_lifetime_start_p0i8
    ret


%printi_
    printi i64 rg
    ret

%printc_
    printc i8 rg
    ret

%hlt
    hlt
    und

