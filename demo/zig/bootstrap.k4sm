!ent %_start @ 0x1000 ; header tag: entry point label and address

; data tag: pointer to a static value in memory
@theanswer align8 $42

; entry point function
%_start ; label
    ; number `58` -> `rg` register, treat as 64 bit integer
    mov i64 rg $58 

    ; pointer to static number `42` above -> `rh` register
    mov i64 rh @theanswer 

    ; call external function from Zig code (all labels are just 64 bit addresses)
    call i64 %demo 

    ; return value will be in `ra` register; print it in the emulator
    printi i64 ra 

    ; halt execution of the emulator
    hlt 

%llvm_dbg_value
    ret
